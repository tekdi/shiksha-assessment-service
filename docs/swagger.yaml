openapi: 3.0.0
info:
  contact: {}
  title: Assessment Service
  version: 1.0.0
  description: 'API for managing assessments, questions, and test-taking workflows'
x-flow:
  name: learner-test-flow
  description: |
    Sequence of API interactions used when a learner takes a test. This helps frontend developers and integrators understand the logic for test creation, resuming, and submission using the testUserStatus check.
  steps:
    - step: Check test-user status
      method: GET
      path: '/assessment/v1/tests/{testId}/users/{userId}/status'
      condition: 'Determines if user can resume, reattempt, or is blocked'
    - step: Resume attempt
      method: GET
      path: '/assessment/v1/attempts/{attemptId}'
      condition: If canResume = true
    - step: Start new attempt
      method: POST
      path: /assessment/v1/attempts
      condition: If canReattempt = true
    - step: Get test content
      method: GET
      path: '/assessment/v1/tests/{testId}/hierarchy'
    - step: Save answers
      method: POST
      path: '/assessment/v1/attempts/{attemptId}/answers'
    - step: Submit attempt
      method: POST
      path: '/assessment/v1/attempts/{attemptId}/submit'
    - step: View result
      method: GET
      path: '/assessment/v1/attempts/{attemptId}/result'
      condition: If test is configured to show result
paths:
  /assessment/v1/tests:
    post:
      summary: create
      description: Create a new test
      operationId: createTest
      tags:
        - Tests
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                ver:
                  type: string
                ts:
                  type: string
                params:
                  type: object
                  properties:
                    resmsgid:
                      type: string
                    msgid:
                      type: string
                    status:
                      type: string
                    err:
                      type: string
                    errmsg:
                      type: string
                responseCode:
                  type: string
                result:
                  type: object
                  properties:
                    testId:
                      type: string
              x-examples:
                Example 1:
                  id: api.test.create
                  ver: '1.0'
                  ts: '2023-11-02T10:33:23.321Z'
                  params:
                    resmsgid: 3fc21690-796b-11ee-aa52-8d96a90bc246
                    msgid: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                    status: successful
                    err: null
                    errmsg: null
                  responseCode: OK
                  result:
                    testId: test_123
        description: ''
      responses:
        '200':
          description: Test created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.section.create
                  params:
                    type: object
                    properties:
                      err:
                        type: string
                        nullable: true
                        example: null
                      errmsg:
                        type: string
                        nullable: true
                        example: null
                      msgid:
                        type: string
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                      resmsgid:
                        type: string
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                      status:
                        type: string
                        example: successful
                  responseCode:
                    type: string
                    example: OK
                  result:
                    type: object
                    properties:
                      sectionId:
                        type: string
                        example: section_123
                  ts:
                    type: string
                    example: '2023-11-02T10:33:23.321Z'
                  ver:
                    type: string
                    example: '1.0'
              examples:
                Example 1:
                  value:
                    id: api.test.create
                    ver: '1.0'
                    ts: '2023-11-02T10:33:23.321Z'
                    params:
                      resmsgid: 3fc21690-796b-11ee-aa52-8d96a90bc246
                      msgid: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                      status: successful
                      err: null
                      errmsg: null
                    responseCode: OK
                    result:
                      testId: test_123
    get:
      summary: List Tests
      description: Retrieves a paginated list of tests with optional filters.
      operationId: listTests
      tags:
        - Tests
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: search
          in: query
          schema:
            type: string
            description: Filter tests by title or keyword
        - name: status
          in: query
          schema:
            type: string
            enum:
              - draft
              - published
              - archived
        - name: sortBy
          in: query
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: A list of tests
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.test.list
                  result:
                    type: object
                    properties:
                      tests:
                        type: array
                        items:
                          $ref: '#/components/schemas/TestSummary'
                      count:
                        type: integer
                        example: 100
                  responseCode:
                    type: string
                    example: OK
                  ts:
                    type: string
                    example: '2025-05-13T14:30:00.000Z'
  '/assessment/v1/tests/{testId}/clone':
    post:
      tags:
        - Tests
      description: |
        Clones the test with the given ID, including its sections and questions (if specified).
      operationId: cloneTest
      summary: Clone a Test
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                includeSections:
                  type: boolean
                includeQuestions:
                  type: boolean
            examples:
              request:
                value:
                  includeSections: true
                  includeQuestions: false
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.test.clone
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      msgid:
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                        type: string
                      resmsgid:
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: OK
                    type: string
                  result:
                    properties:
                      testId:
                        example: test_324
                        type: string
                    type: object
                  ts:
                    example: '2023-11-02T10:33:23.321Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
  '/assessment/v1/tests/{testId}':
    get:
      parameters:
        - in: path
          name: testId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.test.read
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      msgid:
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                        type: string
                      resmsgid:
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: OK
                    type: string
                  result:
                    properties:
                      alias:
                        example: javascript-fundamentals
                        type: string
                      answer_sheet:
                        example: true
                        type: boolean
                      answers_shuffle:
                        example: true
                        type: boolean
                      created_by:
                        example: 123
                        type: number
                      created_on:
                        example: '2025-05-05T03:50:20.224Z'
                        type: string
                      description:
                        example: Test your knowledge of JavaScript fundamentals
                        type: string
                      end_date:
                        example: '2025-05-05T03:50:20.224Z'
                        type: string
                      gradingtype:
                        example: standard
                        type: string
                      testId:
                        example: test_123
                        type: string
                      image:
                        example: test-cover.jpg
                        type: string
                      isObjective:
                        example: true
                        type: boolean
                      modified_on:
                        example: '2025-05-05T03:50:20.224Z'
                        type: string
                      ordering:
                        example: 1
                        type: number
                      pagination_limit:
                        example: 10
                        type: number
                      parent_id:
                        example: null
                        x-nullable: true
                      passing_marks:
                        example: 60
                        type: number
                      print_answersheet:
                        example: false
                        type: boolean
                      questions_shuffle:
                        example: true
                        type: boolean
                      reviewers:
                        example:
                          - 101
                          - 102
                        items:
                          example: 101
                          type: number
                        type: array
                      show_all_questions:
                        example: false
                        type: boolean
                      show_correct_answer:
                        example: false
                        type: boolean
                      show_questions_overview:
                        example: true
                        type: boolean
                      show_quiz_marks:
                        example: true
                        type: boolean
                      show_thankyou_page:
                        example: true
                        type: boolean
                      show_time:
                        example: true
                        type: boolean
                      show_time_finished:
                        example: true
                        type: boolean
                      start_date:
                        example: '2025-05-05T03:50:20.224Z'
                        type: string
                      state:
                        example: 1
                        type: number
                      termscondi:
                        example: true
                        type: boolean
                      time_duration:
                        example: 60
                        type: number
                      time_finished_duration:
                        example: 5
                        type: number
                      title:
                        example: JavaScript Fundamentals Assessment
                        type: string
                      total_marks:
                        example: 100
                        type: number
                      type:
                        example: plain
                        type: string
                    type: object
                  ts:
                    example: '2023-11-02T10:33:23.321Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
      tags:
        - Tests
      description: read
      operationId: read
      summary: read
    put:
      tags:
        - Tests
      description: update
      operationId: update
      summary: update
      parameters:
        - $ref: '#/components/parameters/XTenantId'
        - in: path
          name: testId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: update
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.test.update
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      msgid:
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                        type: string
                      resmsgid:
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: OK
                    type: string
                  result:
                    properties:
                      testId:
                        example: test_123
                        type: string
                    type: object
                  ts:
                    example: '2023-11-02T10:33:23.321Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
    delete:
      summary: delete
      tags:
        - Tests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  ver:
                    type: string
                  ts:
                    type: string
                  params:
                    type: object
                    properties:
                      resmsgid:
                        type: string
                      msgid:
                        type: string
                      status:
                        type: string
                      err:
                        type: string
                      errmsg:
                        type: string
                  responseCode:
                    type: string
                  result:
                    type: object
                    properties: {}
                x-examples:
                  Example 1:
                    id: api.test.delete
                    ver: '1.0'
                    ts: '2023-11-02T10:33:23.321Z'
                    params:
                      resmsgid: 3fc21690-796b-11ee-aa52-8d96a90bc246
                      msgid: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                      status: successful
                      err: null
                      errmsg: null
                    responseCode: OK
                    result: {}
      operationId: delete-assessment-v1-test-testId
  '/assessment/v1/tests/{testId}/hierarchy':
    get:
      tags:
        - Tests
      summary: Get full test hierarchy (sections and questions)
      description: Returns a test with all its sections and questions in a nested structure
      operationId: getTestHierarchy
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: string
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
        - name: includeAnswers
          in: query
          required: false
          schema:
            type: boolean
        - name: shuffle
          in: query
          required: false
          schema:
            type: boolean
        - name: sectionId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Test hierarchy with sections and questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestHierarchyResponse'
  /assessment/v1/section:
    post:
      summary: create
      description: Create a new section under a test
      operationId: createSection
      tags:
        - Sections
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Fundamental concepts of JavaScript
                max_questions:
                  type: number
                  example: 10
                min_questions:
                  type: number
                  example: 5
                ordering:
                  type: number
                  example: 1
                state:
                  type: number
                  example: 1
                testId:
                  type: string
                  example: test_123
                title:
                  type: string
                  example: JavaScript Basics
      responses:
        '200':
          description: Section created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.section.create
                  params:
                    type: object
                    properties:
                      err:
                        type: string
                        nullable: true
                        example: null
                      errmsg:
                        type: string
                        nullable: true
                        example: null
                      msgid:
                        type: string
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                      resmsgid:
                        type: string
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                      status:
                        type: string
                        example: successful
                  responseCode:
                    type: string
                    example: OK
                  result:
                    type: object
                    properties:
                      sectionId:
                        type: string
                        example: section_123
                  ts:
                    type: string
                    example: '2023-11-02T10:33:23.321Z'
                  ver:
                    type: string
                    example: '1.0'
  '/assessment/v1/section/list/{testId}':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
    get:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: 200 Ok
      tags:
        - Sections
      description: list
      operationId: list
      summary: list
  '/assessment/v1/section/{sectionId}':
    parameters:
      - in: path
        name: sectionId
        required: true
        schema:
          type: string
    delete:
      summary: delete
      description: Delete a section
      operationId: deleteSection
      tags:
        - Sections
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Section deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.section.delete
                  params:
                    type: object
                    properties:
                      err:
                        type: string
                        nullable: true
                        example: null
                      errmsg:
                        type: string
                        nullable: true
                        example: null
                      msgid:
                        type: string
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                      resmsgid:
                        type: string
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                      status:
                        type: string
                        example: successful
                  responseCode:
                    type: string
                    example: OK
                  result:
                    type: object
                  ts:
                    type: string
                    example: '2023-11-02T10:33:23.321Z'
                  ver:
                    type: string
                    example: '1.0'
    get:
      tags:
        - Sections
      description: read
      operationId: read1
      summary: read
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: Section details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.section.read
                  result:
                    type: object
                    properties:
                      section:
                        type: object
                        properties:
                          title:
                            type: string
                            example: JavaScript Basics
                          description:
                            type: string
                            example: Fundamental concepts of JavaScript
                          min_questions:
                            type: number
                            example: 5
                          max_questions:
                            type: number
                            example: 10
                          ordering:
                            type: number
                            example: 1
                          state:
                            type: number
                            example: 1
                          testId:
                            type: string
                            example: test_123
    put:
      tags:
        - Sections
      description: update
      operationId: update1
      summary: update
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  example: Fundamental concepts of JavaScript
                  type: string
                max_questions:
                  example: 10
                  type: number
                min_questions:
                  example: 5
                  type: number
                ordering:
                  example: 1
                  type: number
                state:
                  example: 1
                  type: number
                title:
                  example: JavaScript Basics
                  type: string
      responses:
        '200':
          description: Section updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.section.update
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      msgid:
                        example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
                        type: string
                      resmsgid:
                        example: 3fc21690-796b-11ee-aa52-8d96a90bc246
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: OK
                    type: string
                  result:
                    properties:
                      sectionId:
                        example: section_123
                        type: string
                    type: object
                  ts:
                    example: '2023-11-02T10:33:23.321Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
  /assessment/v1/questions:
    post:
      summary: Create a new question
      description: 'Creates a new question of any type (MCQ, MTF, etc.)'
      operationId: createQuestion
      tags:
        - Questions
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Sample MCQ Question
                description:
                  type: string
                  example: Choose the correct answer.
                type:
                  type: string
                  example: mcq_single
                difficulty:
                  type: string
                  example: easy
                duration:
                  type: number
                  example: 2
                marks:
                  type: number
                  example: 1
                questionMedia:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: text
                      value:
                        type: string
                        example: What is 2 + 2?
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: opt_1
                      media:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: text
                            value:
                              type: string
                              example: '3'
                answer:
                  type: array
                  items:
                    type: string
                    example: opt_2
            examples:
              MCQ-single:
                value:
                  title: Sample MCQ Question
                  description: Choose the correct answer.
                  type: mcq_single
                  difficulty: easy
                  duration: 2
                  marks: 1
                  questionMedia:
                    - type: text
                      value: What is 2 + 2?
                  options:
                    - id: opt_1
                      media:
                        - type: text
                          value: '3'
                  answer:
                    - opt_2
              MCQ-multiple:
                value:
                  type: mcq_multiple
                  level: medium
                  marks: 3
                  allowPartialScoring: true
                  title: Select the prime numbers.
                  options:
                    - text: '2'
                      isCorrect: true
                      marks: 1
                    - text: '3'
                      isCorrect: true
                      marks: 1
                    - text: '4'
                      isCorrect: false
                    - text: '5'
                      isCorrect: true
                      marks: 1
              True or False:
                value:
                  type: true_false
                  level: easy
                  marks: 1
                  title: The sun rises in the east.
                  options:
                    - text: 'True'
                      isCorrect: true
                    - text: 'False'
                      isCorrect: false
              FTB:
                value:
                  type: ftb
                  level: medium
                  marks: 2
                  title: Water freezes at ____ degrees Celsius.
                  allowPartialScoring: false
                  options:
                    - blankIndex: 1
                      text: '0'
                      caseSensitive: false
                      isCorrect: true
              MTF:
                value:
                  type: mtf
                  level: hard
                  marks: 3
                  allowPartialScoring: true
                  title: Match the countries with their capitals.
                  options:
                    - text: France
                      matchWith: Paris
                      marks: 1
                    - text: Germany
                      matchWith: Berlin
                      marks: 1
                    - text: Italy
                      matchWith: Rome
                      marks: 1
      responses:
        '200':
          description: Question created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.question.create
                  ts:
                    type: string
                    format: date-time
                    example: '2025-05-05T10:30:00Z'
                  ver:
                    type: string
                    example: '1.0'
                  params:
                    type: object
                    properties:
                      err:
                        nullable: true
                        example: null
                      errmsg:
                        nullable: true
                        example: null
                      msgid:
                        nullable: true
                        example: null
                      resmsgid:
                        type: string
                        example: b00123f8-abc1-4567-9123-7890abcd1234
                      status:
                        type: string
                        example: successful
                  responseCode:
                    type: string
                    example: OK
                  result:
                    type: object
                    properties:
                      questionId:
                        type: string
                        example: question_12232434
              examples:
                Example 1:
                  value:
                    id: api.question.create
                    ts: '2025-05-05T10:30:00Z'
                    ver: '1.0'
                    params:
                      err: null
                      errmsg: null
                      msgid: null
                      resmsgid: b00123f8-abc1-4567-9123-7890abcd1234
                      status: successful
                    responseCode: OK
                    result:
                      questionId: question_12232434
    get:
      summary: List Questions
      description: Retrieves a paginated list of questions with optional filters.
      operationId: listQuestions
      tags:
        - Questions
      parameters:
        - name: X-Tenant-ID
          in: header
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: search
          in: query
          schema:
            type: string
            description: Filter tests by title or keyword
        - name: status
          in: query
          schema:
            type: string
            enum:
              - draft
              - published
              - archived
        - name: sortBy
          in: query
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - name: order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: A list of questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: api.question.list
                  result:
                    type: object
                    properties:
                      tests:
                        type: array
                        items:
                          $ref: '#/components/schemas/Question'
                      count:
                        type: integer
                        example: 100
                  responseCode:
                    type: string
                    example: OK
                  ts:
                    type: string
                    example: '2025-05-13T14:30:00.000Z'
  '/assessment/v1/questions/{questionId}':
    parameters:
      - in: path
        name: questionId
        required: true
        description: Unique ID of the question
        schema:
          type: string
    get:
      summary: read
      description: Get question by ID
      operationId: read2
      tags:
        - Questions
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Question fetched successfully
          content:
            application/json:
              example:
                questionId: question_abc123
                title: What is 2 + 2?
                type: mcq_single
                marks: 1
                options:
                  - id: opt_1
                    text: '3'
                  - id: opt_2
                    text: '4'
                answer:
                  - opt_2
    delete:
      summary: delete
      description: Delete question by ID
      operationId: delete1
      tags:
        - Questions
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Question deleted
    put:
      summary: update
      description: Update question details
      operationId: update2
      tags:
        - Questions
      parameters:
        - in: header
          name: X-Tenant-ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Updated Question Title
                description:
                  type: string
                  example: Updated description
                marks:
                  type: number
                  example: 2
      responses:
        '200':
          description: Question updated successfully
          content:
            application/json:
              example:
                questionId: question_abc123
                title: Updated Question Title
                marks: 2
                description: Updated description
  '/assessment/v1/tests/{testId}/question':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
    post:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                questionIds:
                  example:
                    - qstn_101
                    - qstn_102
                  items:
                    example: qstn_101
                    type: string
                  type: array
                sectionId:
                  example: section_001
                  type: string
      responses:
        '200':
          description: ''
      tags:
        - Tests
      description: add question to test (with sectionId)
      operationId: addQuestionToTestWithSectionid
      summary: add question to test (with sectionId)
  '/assessment/v1/tests/{testId}/question/{questionId}':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
      - in: path
        name: questionId
        required: true
        schema:
          type: string
    delete:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: ''
      tags:
        - Tests
      description: remove question from test
      operationId: removeQuestionFromTest
      summary: remove question from test
  /assessment/v1/attempts:
    get:
      parameters:
        - in: query
          name: testId
          schema:
            type: string
        - in: query
          name: userid
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: result
          schema:
            type: string
        - in: query
          name: revalOnly
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: string
        - in: header
          name: X-Tenant-ID
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Attempts
      description: 'Get the list of attempts done in the system. Can pass testId, userId. The attempts can further be filtered by status.'
      operationId: getAttempts
      summary: Get the attempts done for a test or by a userId.
  '/assessment/v1/attempts/{attemptId}':
    get:
      summary: Get Attempt Details
      description: 'Get full details of a specific test attempt, including score, review status, and answers. if asked for'
      operationId: getAttemptResult
      tags:
        - Attempts
      parameters:
        - in: header
          name: X-Tenant-ID
          schema:
            type: string
        - in: path
          name: attemptId
          required: true
          description: Unique identifier of the attempt
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: view
          description: summary / answersheet / review
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  ver:
                    type: string
                  ts:
                    type: string
                  params:
                    type: object
                    properties:
                      resmsgid:
                        type: string
                      status:
                        type: string
                      err:
                        type: string
                      errmsg:
                        type: string
                  responseCode:
                    type: integer
                  result:
                    type: object
                    properties:
                      attemptId:
                        type: string
                      testId:
                        type: string
                      status:
                        type: string
                      score:
                        type: integer
                      sections:
                        type: array
                        items:
                          type: object
                          properties:
                            sectionId:
                              type: string
                            title:
                              type: string
                            questions:
                              type: array
                              items:
                                type: object
                                properties:
                                  questionId:
                                    type: string
                                  text:
                                    type: string
                                  correctOptionIds:
                                    type: array
                                    items:
                                      type: string
                                  userAnswer:
                                    type: object
                                    properties:
                                      selectedOptionIds:
                                        type: array
                                        items:
                                          type: string
                                  isCorrect:
                                    type: boolean
                x-examples:
                  Example 1:
                    id: api.attempt.read
                    ver: '1.0'
                    ts: '2024-03-21T10:00:00Z'
                    params:
                      resmsgid: uuid
                      status: successful
                      err: null
                      errmsg: null
                    responseCode: 200
                    result:
                      attemptId: attempt_456
                      testId: test_123
                      status: submitted
                      score: 7
                      sections:
                        - sectionId: sec_1
                          title: Physics
                          questions:
                            - questionId: q_1
                              text: What is gravity?
                              correctOptionIds:
                                - a
                              userAnswer:
                                selectedOptionIds:
                                  - a
                              isCorrect: true
              examples:
                view=answersheet:
                  value:
                    id: api.attempt.read
                    ver: '1.0'
                    ts: '2024-03-21T10:00:00Z'
                    params:
                      resmsgid: uuid
                      status: successful
                      err: null
                      errmsg: null
                    responseCode: 200
                    result:
                      attemptId: attempt_456
                      testId: test_123
                      status: submitted
                      score: 7
                      sections:
                        - sectionId: sec_1
                          title: Physics
                          questions:
                            - questionId: q_1
                              text: What is gravity?
                              correctOptionIds:
                                - a
                              userAnswer:
                                selectedOptionIds:
                                  - a
                              isCorrect: true
                view=summary:
                  value:
                    id: string
                    ver: string
                    ts: string
                    params:
                      resmsgid: string
                      status: string
                      err: string
                      errmsg: string
                    responseCode: 200
                    result:
                      attemptId: abc123
                      testId: test_001
                      status: submitted
                      score: 8
                      result: P
                      submittedAt: '2025-05-13T12:00:00Z'
                view=review:
                  value:
                    id: string
                    ver: string
                    ts: string
                    params:
                      resmsgid: string
                      status: string
                      err: string
                      errmsg: string
                    responseCode: 200
                    result:
                      attemptId: abc123
                      testId: test_001
                      reviewStatus: REVIEWED
                      reviewedBy: admin_001
                      remarks: Good attempt overall
                      manualScores:
                        - questionId: q5
                          score: 3
                          comment: Well explained
                      finalScore: 9.5
                      result: P
    put:
      parameters:
        - in: header
          name: X-Tenant-ID
          schema:
            type: string
        - in: path
          name: attemptId
          required: true
          description: Unique identifier of the attempt
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Attempts
      description: Update Attempt Score and Status (Admin/Teacher)
      operationId: updateAttemptScoreAndStatusAdminTeacher
      summary: Update Attempt Score and Status (Admin/Teacher)
  '/assessment/v1/test/{testId}/attempts/{attemptId}/answers':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
      - in: path
        name: attemptId
        required: true
        schema:
          type: string
    post:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  properties:
                    selectedOptionIds:
                      example:
                        - a
                      items:
                        example: a
                        type: string
                      type: array
                  type: object
                questionId:
                  example: q_1
                  type: string
      responses:
        '200':
          description: ''
      tags:
        - Attempts
      description: track progress (save answers)
      operationId: trackProgressSaveAnswers
      summary: track progress (save answers)
  '/assessment/v1/test/{testId}/attempts/{attemptId}/submit':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
      - in: path
        name: attemptId
        required: true
        schema:
          type: string
    post:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: Submit Attempt
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.attempt.submit
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      resmsgid:
                        example: uuid
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: 200
                    type: number
                  result:
                    properties:
                      attemptId:
                        example: attempt_456
                        type: string
                      percentage:
                        example: 70
                        type: number
                      result:
                        example: pass
                        type: string
                      score:
                        example: 7
                        type: number
                      status:
                        example: submitted
                        type: string
                      submittedAt:
                        example: '2025-05-07T11:10:00Z'
                        type: string
                      total:
                        example: 10
                        type: number
                    type: object
                  ts:
                    example: '2024-03-21T10:00:00Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
      tags:
        - Attempts
      description: Submit Attempt
      operationId: submitAttempt
      summary: Submit Attempt
  '/assessment/v1/tests/{testId}/attempts':
    parameters:
      - in: path
        name: testId
        required: true
        schema:
          type: string
    get:
      parameters:
        - in: query
          name: studentId
          schema:
            type: string
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: ''
      tags:
        - Attempts
      description: List Past Attempts for a Test
      operationId: listPastAttemptsForATest
      summary: List Past Attempts for a Test
    post:
      parameters:
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: ''
      tags:
        - Attempts
      description: start attempt
      operationId: startAttempt
      summary: start attempt
  '/assessment/v1/users/{userId}/tests':
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
    get:
      parameters:
        - description: 'I=in-progress`, `S=Submitted'
          in: query
          name: status
          schema:
            type: string
        - description: '`P=pass`, `F=fail`'
          in: query
          name: result
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: string
        - $ref: '#/components/parameters/XTenantId'
      responses:
        '200':
          description: list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    example: api.test.list
                    type: string
                  params:
                    properties:
                      err:
                        example: null
                        x-nullable: true
                      errmsg:
                        example: null
                        x-nullable: true
                      resmsgid:
                        example: uuid
                        type: string
                      status:
                        example: successful
                        type: string
                    type: object
                  responseCode:
                    example: 200
                    type: number
                  result:
                    example:
                      - attemptsAllowed: 2
                        attemptsMade: 1
                        canResumeAttempt: true
                        canStartNewAttempt: false
                        description: A basic science quiz
                        lastAttempt:
                          startedAt: '2025-04-29T10:00:00Z'
                          status: in_progress
                          submittedAt: null
                          testTrackId: track_123
                        resumeAllowed: true
                        testId: test_001
                        timeLimitInMinutes: 45
                        title: General Science Test
                        totalQuestions: 30
                      - attemptsAllowed: 3
                        attemptsMade: 3
                        canResumeAttempt: false
                        canStartNewAttempt: false
                        description: A test on basic algebra and arithmetic
                        lastAttempt:
                          startedAt: '2025-04-28T09:00:00Z'
                          status: completed
                          submittedAt: '2025-04-28T09:25:00Z'
                          testTrackId: testTrack_234
                        resumeAllowed: false
                        testId: test_002
                        timeLimitInMinutes: 30
                        title: Math Level 1
                        totalQuestions: 20
                      - attemptsAllowed: 2
                        attemptsMade: 0
                        canResumeAttempt: false
                        canStartNewAttempt: true
                        description: A basic history quiz
                        lastAttempt: null
                        quizId: test_003
                        resumeAllowed: true
                        timeLimitInMinutes: 35
                        title: History Basics
                        totalQuestions: 25
                    items:
                      properties:
                        attemptsAllowed:
                          example: 2
                          type: number
                        attemptsMade:
                          example: 1
                          type: number
                        canResumeAttempt:
                          example: true
                          type: boolean
                        canStartNewAttempt:
                          example: false
                          type: boolean
                        description:
                          example: A basic science quiz
                          type: string
                        lastAttempt:
                          properties:
                            startedAt:
                              example: '2025-04-29T10:00:00Z'
                              type: string
                            status:
                              example: in_progress
                              type: string
                            submittedAt:
                              example: null
                              type: string
                              x-nullable: true
                            testTrackId:
                              example: track_123
                              type: string
                          type: object
                          x-nullable: true
                        quizId:
                          example: test_003
                          type: string
                        resumeAllowed:
                          example: true
                          type: boolean
                        testId:
                          example: test_001
                          type: string
                        timeLimitInMinutes:
                          example: 45
                          type: number
                        title:
                          example: General Science Test
                          type: string
                        totalQuestions:
                          example: 30
                          type: number
                      type: object
                    type: array
                  ts:
                    example: '2024-03-21T10:00:00Z'
                    type: string
                  ver:
                    example: '1.0'
                    type: string
      tags:
        - Attempts
      description: list of attempted tests
      operationId: listOfAttemptedTests
      summary: list of attempted tests
  '/assessment/v1/tests/{testId}/user/{userId}/status':
    parameters:
      - schema:
          type: string
        name: testId
        in: path
        required: true
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: Get user’s test attempt status
      description: |
        Returns the current status of a specific user's engagement with a test,
        including whether they can resume or reattempt, current score, result, etc.
      operationId: getUserTestStatus
      tags:
        - Tests
        - User-Test-Status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  testId:
                    type: string
                  userId:
                    type: string
                  allowedAttempts:
                    type: integer
                  completedAttempts:
                    type: integer
                  firstAttemptAt:
                    type: string
                  lastAttemptId:
                    type: string
                  lastAttemptAt:
                    type: string
                  lastAttemptStatus:
                    type: string
                  score:
                    type: string
                  result:
                    type: string
                  canResume:
                    type: boolean
                  canReattempt:
                    type: boolean
                  lastAttempt:
                    type: object
                    properties:
                      attemptId:
                        type: string
                      attempt:
                        type: integer
                      status:
                        type: string
                      startedAt:
                        type: string
                      submittedAt:
                        type: string
                      currentPosition:
                        type: integer
                      timeSpent:
                        type: integer
                      reviewStatus:
                        type: string
                x-examples:
                  Example 1:
                    testId: test_12345
                    userId: user_56789
                    allowedAttempts: 3
                    completedAttempts: 1
                    firstAttemptAt: '2025-05-12T10:00:00Z'
                    lastAttemptId: attempt_abc_789
                    lastAttemptAt: '2025-05-12T11:00:00Z'
                    lastAttemptStatus: in-progress
                    score: null
                    result: null
                    canResume: true
                    canReattempt: true
                    lastAttempt:
                      attemptId: attempt_abc_789
                      attempt: 1
                      status: in_progress
                      startedAt: '2025-04-29T10:00:00Z'
                      submittedAt: null
                      currentPosition: 2
                      timeSpent: 120
                      reviewStatus: null
tags:
  - name: Attempts
  - name: Tests
  - name: Sections
  - name: Questions
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/tekdi-80d/assessment/1.0.0'
  - url: 'http://localhost'
    description: local
components:
  parameters:
    XTenantId:
      name: X-Tenant-ID
      in: header
      required: true
      schema:
        type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    GetTestHierarchyResponse:
      type: object
      properties:
        id:
          type: string
          example: api.test.hierarchy.read
        ver:
          type: string
          example: '1.0'
        ts:
          type: string
          format: date-time
          example: '2025-05-13T12:00:00Z'
        params:
          $ref: '#/components/schemas/ResponseParams'
        responseCode:
          type: string
          example: OK
        result:
          type: object
          properties:
            test:
              $ref: '#/components/schemas/TestWithHierarchy'
    ResponseParams:
      type: object
      properties:
        err:
          type: string
          nullable: true
          example: null
        errmsg:
          type: string
          nullable: true
          example: null
        msgid:
          type: string
          example: 8f37305d-3a21-4494-86ce-04af5b7f2eb3
        resmsgid:
          type: string
          example: 3fc21690-796b-11ee-aa52-8d96a90bc246
        status:
          type: string
          example: successful
    TestWithHierarchy:
      type: object
      properties:
        id:
          type: string
          example: test_123
        title:
          type: string
          example: JavaScript Mastery Quiz
        description:
          type: string
          example: Test your JavaScript skills.
        duration:
          type: integer
          example: 1800
        shuffle_questions:
          type: boolean
          example: true
        shuffle_answers:
          type: boolean
          example: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionWithQuestions'
    SectionWithQuestions:
      type: object
      properties:
        id:
          type: string
          example: section_1
        title:
          type: string
          example: Basics
        ordering:
          type: integer
          example: 1
        min_questions:
          type: integer
          example: 2
        max_questions:
          type: integer
          example: 4
        questions:
          type: array
          items:
            $ref: '#/components/schemas/QuestionWithOptions'
    QuestionWithOptions:
      type: object
      properties:
        id:
          type: string
          example: q1
        type:
          type: string
          example: mcq-single
        text:
          type: string
          example: What is the output of `typeof null`?
        shuffle_options:
          type: boolean
          example: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
    QuestionOption:
      type: object
      properties:
        value:
          type: string
          example: object
        label:
          type: string
          example: object
    Question:
      type: object
      properties:
        questionId:
          type: string
          example: question_123
        title:
          type: string
          example: What is 1 + 1
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          example: published
        type:
          type: string
          enum:
            - mcq-single
            - mcq-multiple
            - mtf
            - ftb
            - true-or-false
          example: mcq-single
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    TestSummary:
      type: object
      properties:
        id:
          type: string
          example: test_123
        title:
          type: string
          example: JavaScript Fundamentals
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          example: published
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

